# HELK sysmon filter conf file
# HELK build Stage: Alpha
# Author: Roberto Rodriguez (@Cyb3rWard0g)
# License: GPL-3.0

filter {
  if [event_data] and [log_name] == "Microsoft-Windows-Sysmon/Operational" {
    date {
      timezone => "UTC"
      match => [ "[event_data][UtcTime]", "YYYY-MM-dd HH:mm:ss.SSS", "YYYY-MM-dd HH:mm:ss.SSSSSS" ]
      target => "@timestamp"
      tag_on_failure => [ "_sysmon_UtcTime_datefailure", "_sysmon_datefailure", "_dateparsefailure" ]
    }
    mutate { add_field => { "z_logstash_pipeline" => "1531" } }

    mutate {
      rename => {
        "[event_data][ProcessGuid]" => "process_guid"
        "[event_data][ProcessId]" => "process_id"
        "[event_data][Image]" => "process_path"
      }
    }

    if [event_id] == 1 {
      mutate {
        add_field => {
          "event_type" => "process"
          "subtype" => "create"
        }
        rename => {
          "[event_data][CommandLine]" => "process_command_line"
          "[event_data][CurrentDirectory]" => "process_current_directory"
          "[event_data][IntegrityLevel]" => "process_integrity_level"
          "[event_data][LogonGuid]" => "process_user_logon_guid"
          "[event_data][LogonId]" => "process_user_logon_id"
          "[event_data][TerminalSessionId]" => "process_session_id"
          "[event_data][FileVersion]" => "process_file_version"
          "[event_data][Description]" => "process_file_description"
          "[event_data][Product]" => "process_file_product"
          "[event_data][Company]" => "process_file_company"
          "[event_data][OriginalFileName]" => "process_file_name_original"
          "[event_data][User]" => "process_user_account"
          "[event_data][ParentProcessGuid]" => "process_parent_guid"
          "[event_data][ParentProcessId]" => "process_parent_id"
          "[event_data][ParentImage]" => "process_parent_path"
          "[event_data][ParentCommandLine]" => "process_parent_command_line"
        }
      }
      kv {
        source => "[event_data][Hashes]"
        field_split => ","
        value_split => "="
        prefix => "precess_hash_"
        transform_key => "lowercase"
      }
    }
    else if [event_id] == 2 {
      mutate {
        add_field => {
          "event_type" => "file"
          "subtype" => "create_time"
        }
        rename => { "[event_data][TargetFilename]" => "file_path" }
      }
      date {
        timezone => "UTC"
        match => [ "[event_data][CreationUtcTime]", "YYYY-MM-dd HH:mm:ss.SSS" ]
        target => "file_creation_time"
        tag_on_failure => [ "_sysmon_CreationUtcTime_datefailure", "_sysmon_datefailure", "_dateparsefailure" ]
      }
      date {
        timezone => "UTC"
        match => [ "[event_data][PreviousCreationUtcTime]", "YYYY-MM-dd HH:mm:ss.SSS" ]
        target => "file_previous_creation_time"
        tag_on_failure => [ "_sysmon_PreviousCreationUtcTime_datefailure", "_sysmon_datefailure", "_dateparsefailure" ]
      }
    }
    else if [event_id] == 3 {
      mutate {
        add_field => {
          "event_type" => "network"
        }
        rename => {
          "[event_data][User]" => "process_user_account"
          "[event_data][DestinationIp]" => "dst_ip_addr"
          "[event_data][DestinationHostname]" => "dst_host_name"
          "[event_data][DestinationPort]" => "dst_port"
          "[event_data][Protocol]" => "network_protocol"
          "[event_data][SourceIp]" => "src_ip_addr"
          "[event_data][SourceHostname]" => "src_host_name"
          "[event_data][SourcePort]" => "src_port"
        }
      }
      translate {
        field => "[event_data][Initiated]"
        destination => "network_direction"
        dictionary => {
          "true" => "outgoing"
          "false" => "incoming"
        }
      }
    }
    else if [event_id] == 4 {
    }
    else if [event_id] == 5 {
      mutate {
        add_field => {
          "event_type" => "process"
          "subtype" => "terminate"
        }
      }
    }
    else if [event_id] == 6 {
      mutate {
        add_field => {
          "event_type" => "driver"
          "subtype" => "load"
        }
        rename => {
          "[event_data][ImageLoaded]" => "driver_path"
          "[event_data][Signature]" => "driver_signature"
          "[event_data][SignatureStatus]" => "driver_signature_status"
          "[event_data][Signed]" => "driver_is_signed"
        }
      }
      kv {
        source => "[event_data][Hashes]"
        field_split => ","
        value_split => "="
        prefix => "driver_hash_"
        transform_key => "lowercase"
      }
    }
    else if [event_id] == 7 {
      mutate {
        add_field => {
          "event_type" => "module"
          "subtype" => "load"
        }
        rename => {
          "[event_data][ImageLoaded]" => "module_path"
          "[event_data][Signature]" => "module_signature"
          "[event_data][SignatureStatus]" => "module_signature_status"
          "[event_data][Signed]" => "module_is_signed"
          "[event_data][FileVersion]" => "module_version"
          "[event_data][Description]" => "module_description"
          "[event_data][Product]" => "module_product"
          "[event_data][Company]" => "module_company"
          "[event_data][OriginalFileName]" => "module_name_original"
        }
      }
      kv {
        source => "[event_data][Hashes]"
        field_split => ","
        value_split => "="
        prefix => "module_hash_"
        transform_key => "lowercase"
      }
    }
    else if [event_id] == 8 {
      mutate {
        add_field => {
          "event_type" => "remotethread"
          "subtype" => "create"
        }
        rename => {
          "[event_data][SourceProcessGuid]" => "process_guid"
          "[event_data][SourceProcessId]" => "process_id"
          "[event_data][SourceImage]" => "process_path"
          "[event_data][TargetProcessGuid]" => "process_target_guid"
          "[event_data][TargetProcessId]" => "process_target_id"
          "[event_data][TargetImage]" => "process_target_path"
          "[event_data][NewThreadId]" => "thread_new_id"
          "[event_data][StartAddress]" => "thread_start_address"
          "[event_data][StartFunction]" => "thread_start_function"
          "[event_data][StartModule]" => "thread_start_module"
        }
      }
    }
    else if [event_id] == 9 {
      mutate {
        add_field => {
          "event_type" => "rawaccess"
          "subtype" => "read"
        }
        rename => {
          "[event_data][Device]" => "device_name"
        }
      }
    }
    else if [event_id] == 10 {
      mutate {
        add_field => {
          "event_type" => "processaccess"
        }
        rename => {
          "[event_data][SourceProcessGUID]" => "process_guid"
          "[event_data][SourceProcessId]" => "process_id"
          "[event_data][SourceThreadId]" => "process_thread_id"
          "[event_data][SourceImage]" => "process_path"
          "[event_data][TargetProcessGUID]" => "process_target_guid"
          "[event_data][TargetProcessId]" => "process_target_id"
          "[event_data][TargetImage]" => "process_target_path"
          "[event_data][GrantedAccess]" => "process_granted_access"
          "[event_data][CallTrace]" => "process_call_trace"
        }
      }
    }
    else if [event_id] == 11 {
      mutate {
        add_field => {
          "event_type" => "file"
          "subtype" => "create"
        }
        rename => {
          "[event_data][TargetFilename]" => "file_path"
        }
      }
      date {
        timezone => "UTC"
        match => [ "[event_data][CreationUtcTime]", "YYYY-MM-dd HH:mm:ss.SSS" ]
        target => "file_creation_time"
        tag_on_failure => [ "_sysmon_CreationUtcTime_datefailure", "_sysmon_datefailure", "_dateparsefailure" ]
      }
    }
    else if [event_id] == 12 {
      mutate {
        add_field => {
          "event_type" => "registry"
        }
        rename => {
          "[event_data][TargetObject]" => "registry_path"
        }
      }
      translate {
        field => "[event_data][EventType]"
        destination => "subtype"
        dictionary => {
          "CreateKey" => "create_key"
          "DeleteKey" => "delete_key"
          "DeleteValue" => "delete_value"
        }
      }
    }
    else if [event_id] == 13 {
      mutate {
        add_field => {
          "event_type" => "registry"
          "subtype" => "set_value"
        }
        rename => {
          "[event_data][TargetObject]" => "registry_path"
          "[event_data][Details]" => "registry_value_data"
        }
      }
    }
    else if [event_id] == 14 {
      mutate {
        add_field => {
          "event_type" => "registry"
        }
        rename => {
          "[event_data][TargetObject]" => "registry_path"
          "[event_data][NewName]" => "registry_target_path"
        }
      }
      translate {
        field => "[event_data][EventType]"
        destination => "subtype"
        dictionary => {
          "RenameKey" => "rename_key"
        }
      }
    }
    else if [event_id] == 15 {
      mutate {
        add_field => {
          "event_type" => "file"
          "subtype" => "create_stream"
        }
        rename => {
          "[event_data][TargetFilename]" => "file_path"
        }
      }
      kv {
        source => "[event_data][Hash]"
        field_split => ","
        value_split => "="
        prefix => "file_hash_"
        transform_key => "lowercase"
      }
    }
    else if [event_id] == 16 {
    }
    else if [event_id] == 18 or [event_id] == 17 {
      mutate {
        add_field => {
          "event_type" => "pipe"
        }
        rename => {
          "[event_data][PipeName]" => "pipe_name"
        }
      }
      translate {
        field => "[event_data][EventType]"
        destination => "subtype"
        dictionary => {
          "CreatePipe" => "create_pipe"
          "ConnectPipe" => "connect_pipe"
        }
      }
    }
    else if [event_id] == 19 {
#      mutate {
#        add_field => {
#          "event_type" => "wmi"
#        }
#        rename => {
#          "EventType" => "subtype"
#          "Operation" => "wmi_operation"
#          "EventNamespace" => "wmi_namespace"
#          "Name" => "wmi_filter_name"
#          "Query" => "wmi_query"
#        }
#      }
    }
    else if [event_id] == 20 {
#      mutate {
#        add_field => {
#          "event_type" => "wmi"
#        }
#        rename => {
#          "EventType" => "subtype"
#          "Operation" => "wmi_operation"
#          "Name" => "wmi_consumer_name"
#          "Type" => "wmi_consumer_type"
#          "Destination" => "wmi_consumer_destination"
#        }
#      }
    }
    else if [event_id] == 21 {
#      mutate {
#        add_field => {
#          "event_type" => "wmi"
#        }
#        rename => {
#          "EventType" => "subtype"
#          "Operation" => "wmi_operation"
#          "Consumer" => "wmi_consumer_path"
#          "Filter" => "wmi_filter_path"
#        }
#      }
    }
    else if [event_id] == 22 {
      mutate {
        add_field => {
          "event_type" => "domain"
        }
        rename => {
          "QueryName" => "dns_query_name"
          "QueryStatus" => "dns_query_status"
          "QueryResults" => "dns_query_results"
        }
      }
    }

    if [process_user_logon_guid] {
      mutate {
        add_field => { "z_logstash_pipeline" => "1544_1" }
        gsub => [ "process_user_logon_guid", "[{}]", "" ]
      }
    }
    if [process_guid] {
      mutate {
        add_field => { "z_logstash_pipeline" => "1544_3" }
        gsub => [ "process_guid", "[{}]", "" ]
      }
    }
    if [process_parent_guid] {
      mutate {
        add_field => { "z_logstash_pipeline" => "1544_4" }
        gsub => [ "process_parent_guid", "[{}]", "" ]
      }
    }
    if [process_target_guid] {
      mutate {
        add_field => { "z_logstash_pipeline" => "1544_5" }
        gsub => [ "process_target_guid", "[{}]", "" ]
      }
    }
  }
}